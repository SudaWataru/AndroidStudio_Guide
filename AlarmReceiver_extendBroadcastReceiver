package com.example;

import android.Manifest;
import android.app.Notification;
import android.app.NotificationChannel;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.content.pm.PackageManager;
import android.os.Build;
import android.util.Log;

import androidx.core.app.ActivityCompat;
import androidx.core.app.NotificationCompat;
import androidx.core.app.NotificationManagerCompat;

import com.example.unitylibrary.R;

public class AlarmReceiver extends BroadcastReceiver {

    @Override
    public void onReceive(Context context, Intent intent) {

        //値の取得
        String message = intent.getStringExtra("MESSAGE");
        Integer primary_key = intent.getIntExtra("PRIMARY_KEY", 0);
        String channelId = "PersonalNotification";

        Log.e("AndroidRunTme", "GetParam");

        // intentからPendingIntentを作成
        PendingIntent pendingIntent = PendingIntent.getActivity(context, 0, intent, PendingIntent.FLAG_CANCEL_CURRENT | PendingIntent.FLAG_IMMUTABLE);
        Log.e("AndroidRunTme", "GetPendingIntent");

        // NotificationManagerを取得
        NotificationManager manager = (NotificationManager) context.getSystemService(Service.NOTIFICATION_SERVICE);

        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {
            NotificationChannel channel = new NotificationChannel(channelId,"Alarm",NotificationManager.IMPORTANCE_DEFAULT);
            Log.e("AndroidRunTme", "GetChannel");

            channel.setDescription(message);
            Log.e("AndroidRunTme", "SetMessage");
            Log.e("AndroidRunTme", "SetManager");

            manager.createNotificationChannel(channel);
            Log.e("AndroidRunTme", "CreateNotificationChannel");
        }

        // NotificationBuilderを作成
        NotificationCompat.Builder notification = new NotificationCompat.Builder(context, channelId)
                .setContentIntent(pendingIntent)
                .setTicker("通知がとどきました")//ステータスバーに届くテキスト
                .setSmallIcon(R.drawable.ic_stat_name)           //アイコン
                .setContentTitle("タイトルだよ！！")       // タイトル
                .setContentText(message)     // 本文（サブタイトル）
                //.setLargeIcon(largeIcon)              //開いた時のアイコン
                .setWhen(System.currentTimeMillis())  //通知に表示される時間(※通知時間ではない！)
                .setDefaults(Notification.DEFAULT_ALL)// 通知時の音・バイブ・ライト
                .setPriority(Notification.PRIORITY_DEFAULT)
                .setAutoCancel(true);

        Log.e("AndroidRunTme", "BuildNotification");

        NotificationManagerCompat notificationManagerCompat = NotificationManagerCompat.from(context);
        Log.e("AndroidRunTme", "GetNotificationManagerCompat");


        if (ActivityCompat.checkSelfPermission(context, Manifest.permission.POST_NOTIFICATIONS) != PackageManager.PERMISSION_GRANTED)
        {
            // TODO: Consider calling
            //    ActivityCompat#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for ActivityCompat#requestPermissions for more details.
            return;
        }

        // Notificationを作成して通知
        notificationManagerCompat.notify(primary_key, notification.build());
        Log.e("AndroidRunTme","Notify");
    }
}
